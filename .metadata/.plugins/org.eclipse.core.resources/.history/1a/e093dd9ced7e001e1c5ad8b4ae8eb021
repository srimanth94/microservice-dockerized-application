version: "3.8"

services:
  mysqldb:
    image: mysql:5.7
    env_file: ./.env
    environment:
      - MYSQL_ROOT_PASSWORD=$MYSQLDB_ROOT_PASSWORD
      - MYSQL_DATABASE=$MYSQLDB_DATABASE
    ports:
      - $MYSQLDB_LOCAL_PORT:$MYSQLDB_DOCKER_PORT
    volumes:
      - db:/var/lib/mysql

  app:
    depends_on:
      - mysqldb
    image: agentsudo/payment-microservice-k8s:latest # Replace with your Docker image name and tag
    env_file: ./.env
    ports:
      - $SPRING_LOCAL_PORT:$SPRING_DOCKER_PORT
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url": "jdbc:mysql://mysqldb:$MYSQLDB_DOCKER_PORT/$MYSQLDB_DATABASE?useSSL=false",
        "spring.datasource.username": "$MYSQLDB_USER",
        "spring.datasource.password": "$MYSQLDB_ROOT_PASSWORD",
        "spring.jpa.properties.hibernate.dialect": "org.hibernate.dialect.MySQLDialect",
        "spring.jpa.hibernate.ddl-auto": "update",
        "eureka.client.serviceUrl.defaultZone": "http://eureka-server:$EUREKA_SERVER_LOCAL_PORT/eureka/",
        "eureka.client.registerWithEureka": true,
        "eureka.client.fetchRegistry": true
       }'
    volumes:
      - .m2:/root/.m2
    stdin_open: true
    tty: true

  eureka-server:
    image: eureka-server-microservice:latest # Replace with your Docker image name and tag for the Eureka server
    ports:
      - $EUREKA_SERVER_LOCAL_PORT:$EUREKA_SERVER_DOCKER_PORT
    environment:
      SPRING_PROFILES_ACTIVE: "eureka"
      EUREKA_CLIENT_REGISTER-WITH-EUREKA: "false"
      EUREKA_CLIENT_FETCH-REGISTRY: "false"

  cloud-gateway:
    image: cloud-gateway-service:latest # Replace with your Cloud Gateway Docker image and tag
    ports:
      - $GATEWAY_LOCAL_PORT:$GATEWAY_DOCKER_PORT
    environment:
      SPRING_PROFILES_ACTIVE: "gateway"
      EUREKA_CLIENT_SERVICE-URL-GATEWAY: "http://eureka-server:$EUREKA_SERVER_LOCAL_PORT/eureka/"
      EUREKA_INSTANCE-PREFFIX-GATEWAY: cloud-gateway
      EUREKA_CLIENT-REGISTER-WITH-EUREKA: "true"
      EUREKA_CLIENT-FETCH-REGISTRY: "true"
      SPRING_APPLICATION_JSON: '{
        "spring.cloud.gateway.routes[0].id": "order-service-route",
        "spring.cloud.gateway.routes[0].uri": "lb://ORDER-SERVICE",
        "spring.cloud.gateway.routes[0].predicates[0]": "Path=/Order/**",
        "spring.cloud.gateway.routes[1].id": "payment-service-route",
        "spring.cloud.gateway.routes[1].uri": "lb://PAYMENT-SERVICE",
        "spring.cloud.gateway.routes[1].predicates[0]": "Path=/Payment/**"
       }'

volumes:
  db:


            
            
